"""
Django settings for web_app project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5rstnld7v2ce$igtrh2cnni71jw!rq9i@0ua8^mkr6ebrz2g0n'

# SECURITY WARNING: don't run with debug turned on in production!


IS_HEROKU = "DYNO" in os.environ
IS_DOCKER = "IN_DOCKER" in os.environ

DEBUG = not IS_DOCKER

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'web_app'
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'web_app.middlewares.login_middleware.LoginMiddleware'
]

ROOT_URLCONF = 'web_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'web_app.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR /'db.sqlite3'
    }

}
# if IS_DOCKER:
#     DATABASES = {
#         'default':
#             {
#                 'ENGINE': 'django.db.backends.mysql',  # 数据库引擎
#                 'NAME': 'contact',  # 数据库名称
#                 'HOST': "db",
#                 'PORT': 3306,  # 端口
#                 'USER': 'telegram',  # 数据库用户名
#                 'PASSWORD': '949389',  # 数据库密码
#                 'POOL_SIZE': 30
#             }
#     }
# else:
#     DATABASES = {
#         'default':
#             {
#                 'ENGINE': 'django.db.backends.mysql',  # 数据库引擎
#                 'NAME': 'contact',  # 数据库名称
#                 'HOST': '127.0.0.1',  # 数据库地址，本机 ip 地址 127.0.0.1
#                 'PORT': 3306,  # 端口
#                 'USER': 'root',  # 数据库用户名
#                 'PASSWORD': '949389',  # 数据库密码
#             }
#     }

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "templates/static"),
)

# 静态文件收集目录
STATIC_ROOT = os.path.join(BASE_DIR, 'collected_static')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media').replace('\\', '/')  # 设置静态文件路径为主目录下的media文件夹
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

default_auto_field = 'django.db.models.AutoField'

# SECURITY安全设置 - 支持http时建议开启
# SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")   # 推荐
# SECURE_SSL_REDIRECT = True # 将所有非SSL请求永久重定向到SSL
# SESSION_COOKIE_SECURE = True # 仅通过https传输cookie
# CSRF_COOKIE_SECURE = True # 仅通过https传输cookie
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True # 严格要求使用https协议传输
# SECURE_HSTS_PRELOAD = True # HSTS为
# SECURE_HSTS_SECONDS = 60
# SECURE_CONTENT_TYPE_NOSNIFF = True # 防止浏览器猜测资产的内容类型
CORS_ORIGIN_ALLOW_ALL = True
